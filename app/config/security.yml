# To get started with security, check out the documentation:
# http://symfony.com/doc/current/book/security.html
security:
    encoders:
        Symfony\Component\Security\Core\User\User: plaintext
        FOS\UserBundle\Model\UserInterface: bcrypt
        AppBundle\Entity\Proveedor:
                    algorithm: bcrypt

    role_hierarchy:
        ROLE_ADMIN:       ROLE_USER
        ROLE_SUPER_ADMIN: ROLE_ADMIN

    providers:
        fos_userbundle:
            id: fos_user.user_provider.username
        proveedor_db_provider:
            entity:
                class: AppBundle:Proveedor
                property: username
                # if you're using multiple entity managers
                # manager_name: customer
        in_memory:
            memory:
                users:
                    admin:
                      password: adeline63
                      roles: 'ROLE_ADMIN'
    firewalls:
        secured_area:
            pattern: ^/admin/.*
            http_basic:
                realm: 'Secured Admin Area'
                provider: in_memory
        main_proveedor:
            pattern: ^/negocio/.*
            provider: proveedor_db_provider
            anonymous: ~
            form_login:
                        login_path: login_negocio
                        check_path: login_negocio
                        default_target_path: negocio_zona
            logout:
                        path:   /negocio/logout
                        target: /
        main:
            pattern: ^/.*
            form_login:
                provider: fos_userbundle
                csrf_token_generator: security.csrf.token_manager
                success_handler: authentication_handler
                failure_handler: authentication_handler
                #login_path: my_login
                #check_path: my_login_check
                default_target_path: /profile
                # if you are using Symfony < 2.8, use the following config instead:
                # csrf_provider: form.csrf_provider

            logout:
                success_handler: authentication_handler
            anonymous:    true

    access_control:
        - { path: ^/login$, role: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/register, role: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/resetting, role: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/admin/.*, role: ROLE_ADMIN }
        - { path: ^/profile/, role: ROLE_USER }
        - { path: ^/user-action/, role: ROLE_USER }

        - { path: ^/negocio/login, role: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/negocio/registrar, role: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/negocio/.*, role: ROLE_USER }

